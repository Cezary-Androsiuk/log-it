#include "Log.h"

Log::Log()
{
    m_logFileName = LOG_FILE;
    m_maxLogFileSize = MAX_LOG_FILE_SIZE;
    m_logTrimFileSize = TRIM_LOG_FILE_SIZE;
    m_estFunctionSize = EST_FUNCTION_LENGTH;
    m_shorterFunctionFillCharacter = SHORTER_FUNCTION_FILL_CHARACTER;
    m_spaceAfterFunctionNameEnabled = SPACE_AFTER_FUNCTION_NAME_ENABLED;
    m_spaceAfterFunctionNameSize = SPACE_AFTER_FUNCTION_NAME_SIZE;
    m_spaceAfterFunctionNameCharacter = SPACE_AFTER_FUNCTION_NAME_CHARACTER;
}

Log::~Log()
{
    
}

Log *Log::getInstance()
{
    static Log log;
    return &log;
}

void Log::setLogFile(const std::string &filePath)
{
    
}

void Log::setMaxLogFileSize(size_t fileSize)
{
    
}

void Log::setTrimLogFileSize(size_t fileSize)
{
    
}

void Log::setEstimatedFunctionLength(int length)
{
    
}

void Log::setShorterFunctionFillCharacter(char fillCharacter)
{
    
}

void Log::setSpaceAfterFunctionNameEnable(bool enable)
{
    
}

void Log::setSpaceAfterFunctionNameSize(int length)
{
    
}

void Log::setSpaceAfterFunctionNameCharacter(char gapCharacter)
{
    
}

const std::string &Log::getLogFile() const
{
    
}

size_t Log::getMaxLogFileSize() const
{
    
}

size_t Log::getTrimLogFileSize() const
{
    
}

int Log::getEstimatedFunctionLength() const
{
    
}

char Log::getShorterFunctionFillCharacter() const
{
    
}

bool Log::getSpaceAfterFunctionNameEnable() const
{
    
}

int Log::getSpaceAfterFunctionNameSize() const
{
    
}

char Log::getSpaceAfterFunctionNameCharacter() const
{
    
}
